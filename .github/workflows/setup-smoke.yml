name: Setup Smoke tests

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      target:
        required: true
        type: string
      nap-modules:
        required: true
        type: string
      marker:
        required: true
        type: string
      label:
        required: true
        type: string
      go-md5:
        required: true
        type: string
      build-tag:
        required: true
        type: string
      stable-tag:
        required: true
        type: string
      authenticated:
        required: true
        type: boolean
      k8s-version:
        required: true
        type: string

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  setup-smoke:
    permissions:
      contents: read # for docker/build-push-action to read repo content
      id-token: write # for OIDC login to GCR
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set image variables
        id: image_details
        run: |
          echo "name=gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/nginx-ic${{ contains(inputs.nap-modules, 'dos') && '-dos' || '' }}${{ contains(inputs.nap-modules, 'waf') && '-nap' || '' }}${{ contains(inputs.image, 'v5') && '-v5' || '' }}/nginx${{ contains(inputs.image, 'plus') && '-plus' || '' }}-ingress" >> $GITHUB_OUTPUT
          echo "build_tag=${{ inputs.build-tag }}${{ contains(inputs.image, 'ubi-9') && '-ubi' || '' }}${{ contains(inputs.image, 'ubi-8') && '-ubi8' || '' }}${{ contains(inputs.image, 'alpine') && '-alpine' || '' }}${{ contains(inputs.target, 'aws') && '-mktpl' || '' }}${{ contains(inputs.image, 'fips') && '-fips' || ''}}" >> $GITHUB_OUTPUT
          echo "stable_tag=${{ inputs.stable-tag }}${{ contains(inputs.image, 'ubi-9') && '-ubi' || '' }}${{ contains(inputs.image, 'ubi-8') && '-ubi8' || '' }}${{ contains(inputs.image, 'alpine') && '-alpine' || '' }}${{ contains(inputs.target, 'aws') && '-mktpl' || '' }}${{ contains(inputs.image, 'fips') && '-fips' || ''}}" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f # v2.1.7
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}
        if: ${{ inputs.authenticated }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
        if: ${{ inputs.authenticated }}

      - name: Check if stable image exists
        id: stable_exists
        run: |
          if docker pull ${{ steps.image_details.outputs.name }}:${{ steps.image_details.outputs.stable_tag }}; then
            echo "exists=true" >> $GITHUB_OUTPUT
          fi
        if: ${{ inputs.authenticated }}

      - name: NAP modules
        id: nap_modules
        run: |
          [[ "${{ inputs.nap-modules }}" == "waf,dos" ]] && modules="waf-dos" || modules="${{ inputs.nap-modules }}"
          echo "modules=${modules}" >> $GITHUB_OUTPUT
          [[ "${{ inputs.nap-modules }}" =~ waf ]] && agent="true" || agent="false"
          echo "agent=${agent}" >> $GITHUB_OUTPUT
        if: ${{ inputs.nap-modules }}

      - name: Pull build image
        run: |
          docker pull ${{ steps.image_details.outputs.name }}:${{ steps.image_details.outputs.build_tag }}
        if: ${{ inputs.authenticated && steps.stable_exists.outputs.exists != 'true'  }}

      - name: Fetch Cached Artifacts
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ${{ github.workspace }}/dist
          key: nginx-ingress-${{ inputs.go-md5 }}
          fail-on-cache-miss: true
        if: ${{ !inputs.authenticated }}

      - name: Check if test image exists
        id: check-image
        run: |
          docker manifest inspect "gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/test-runner:${{ hashFiles('./tests/requirements.txt', './tests/Dockerfile') || 'latest' }}"
        shell: bash
        continue-on-error: true
        if: ${{ inputs.authenticated  }}

      - name: Build Test-Runner Container
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          file: tests/Dockerfile
          context: "."
          cache-from: type=gha,scope=test-runner
          tags: "gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/test-runner:${{ hashFiles('./tests/requirements.txt', './tests/Dockerfile') || 'latest' }}"
          pull: true
          push: ${{ inputs.authenticated }}
          load: ${{ !inputs.authenticated }}
        if: ${{ ( !inputs.authenticated || steps.check-image.outcome == 'failure' )  }}

      - name: Build ${{ inputs.image }} Container
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          file: build/Dockerfile
          context: "."
          cache-from: type=gha,scope=${{ inputs.image }}${{ steps.nap_modules.outputs.name != '' && format('-{0}', steps.nap_modules.outputs.name) || '' }}
          target: goreleaser
          tags: "${{ steps.image_details.outputs.name }}:${{ steps.image_details.outputs.build_tag }}"
          load: true
          pull: true
          build-args: |
            BUILD_OS=${{ inputs.image }}
            IC_VERSION=CI
            ${{ contains(inputs.image, 'nap') && format('NAP_MODULES={0}', steps.nap_modules.outputs.modules) || '' }}
            ${{ contains(inputs.nap-modules,'waf') && format('NGINX_AGENT={0}', steps.nap_modules.outputs.agent) || '' }}
            ${{ contains(inputs.marker, 'appprotect') && 'DEBIAN_VERSION=buster-slim' || '' }}
          secrets: |
            ${{ contains(inputs.image, 'nap') && format('"nginx-repo.crt={0}"', secrets.NGINX_AP_CRT) || format('"nginx-repo.crt={0}"', secrets.NGINX_CRT) }}
            ${{ contains(inputs.image, 'nap') && format('"nginx-repo.key={0}"', secrets.NGINX_AP_KEY) || format('"nginx-repo.key={0}"', secrets.NGINX_KEY) }}
            ${{ contains(inputs.image, 'ubi') && format('"rhel_license={0}"', secrets.RHEL_LICENSE) || '' }}
        if: ${{ !inputs.authenticated }}

      - name: Generate WAF v5 tgz from JSON
        run: |
          docker run --rm --user root -v /var/run/docker.sock:/var/run/docker.sock -v ${{ github.workspace }}/tests/data/ap-waf-v5:/data gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/nap/waf-compiler:5.4.0 -p /data/wafv5.json -o /data/wafv5.tgz
        if: ${{ contains(inputs.image, 'nap-v5')}}

      - name: Run Smoke Tests
        id: smoke-tests
        uses: ./.github/actions/smoke-tests
        with:
          image-type: ${{ inputs.image }}
          image-name: ${{ steps.image_details.outputs.name }}
          tag: ${{ steps.image_details.outputs.build_tag }}
          marker: ${{ inputs.marker != '' && inputs.marker || '' }}
          label: ${{ inputs.label }}
          k8s-version: ${{ inputs.k8s-version }}
          azure-ad-secret: ${{ secrets.AZURE_AD_AUTOMATION }}
          registry-token: ${{ steps.auth.outputs.access_token }}
          test-image: "gcr.io/f5-gcs-7899-ptg-ingrss-ctlr/dev/test-runner:${{ hashFiles('./tests/requirements.txt', './tests/Dockerfile') || 'latest' }}"
          plus-jwt: ${{ secrets.PLUS_JWT }}
        if: ${{ steps.stable_exists.outputs.exists != 'true'  }}

      - name: Upload Test Results
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: ${{ steps.smoke-tests.outputs.test-results-name }}
          path: ${{ steps.smoke-tests.outputs.test-results-path }}
        if: ${{ !cancelled() && steps.stable_exists.outputs.exists != 'true' }}
