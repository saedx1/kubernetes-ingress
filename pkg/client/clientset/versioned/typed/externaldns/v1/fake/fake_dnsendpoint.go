// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/nginxinc/kubernetes-ingress/pkg/apis/externaldns/v1"
	externaldnsv1 "github.com/nginxinc/kubernetes-ingress/pkg/client/clientset/versioned/typed/externaldns/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeDNSEndpoints implements DNSEndpointInterface
type fakeDNSEndpoints struct {
	*gentype.FakeClientWithList[*v1.DNSEndpoint, *v1.DNSEndpointList]
	Fake *FakeExternaldnsV1
}

func newFakeDNSEndpoints(fake *FakeExternaldnsV1, namespace string) externaldnsv1.DNSEndpointInterface {
	return &fakeDNSEndpoints{
		gentype.NewFakeClientWithList[*v1.DNSEndpoint, *v1.DNSEndpointList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("dnsendpoints"),
			v1.SchemeGroupVersion.WithKind("DNSEndpoint"),
			func() *v1.DNSEndpoint { return &v1.DNSEndpoint{} },
			func() *v1.DNSEndpointList { return &v1.DNSEndpointList{} },
			func(dst, src *v1.DNSEndpointList) { dst.ListMeta = src.ListMeta },
			func(list *v1.DNSEndpointList) []*v1.DNSEndpoint { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.DNSEndpointList, items []*v1.DNSEndpoint) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
